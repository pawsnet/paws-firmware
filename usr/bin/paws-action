#!/bin/ash
# Device actions script
# Provides:
# - on-demand SSH tunnel
# - server heartbeat
# - software update
# - configuration query/pull
#
# author: walter.dedonata@unina.it
# modified for PAWS by arjuna.sathiaseelan@cl.cam.ac.uk

# Import configuration and functions
. /etc/paws/paws.conf
. /usr/lib/paws/functions.inc.sh

# Help screen
[ $1 ] || { echo "$(basename $0) <command> [options]" ; exit ; }

msg () {
echo "$DEVICE_ID log done"
sleep 1
return 0
}

# Perform the requested action
case $1 in
fwd)	# on-demand SSH tunnel
        echo "tunnel"
	if [ $2 == ${2#*:} ]; then
		# Default to local port $MGMT_SSHD_PORT
		( ssh -y $KEEP_ALIVE -N -i $SSH_KEY -R $2:127.0.0.1:$MGMT_SSHD_PORT $USER@$SERVER > /dev/null 2>&1 & ) 
	else
		# To custom IP:PORT destination
		( ssh -y $KEEP_ALIVE -N -i $SSH_KEY -R $2 $USER@$SERVER >/dev/null 2>&1 & )
	fi
;;
pong)	# Server heartbeat
	ltime=$(date +%s)
	stime=$(( $3 + 2 ))

	# Check clock synch
	[ $stime -gt $((ltime + 1)) ] && resync=true
	[ $stime -lt $((ltime - 1)) ] && resync=true
	if [ $resync ]; then
		ltime=$stime
		date -s @$ltime
		hwclock -w
	fi
	echo $ltime > /tmp/paws/var/server_last

	# Store public IP
	echo $2 > /tmp/paws/var/ip
;;
update) # Software update
       if [ "$2" ]; then
               # Upgrade from URL to ipk package
               dl_file $2 /tmp/paws/pkg.ipk
               opkg install --force-overwrite /tmp/paws/pkg.ipk | output $1
               rm /tmp/paws/pkg.ipk
               #Select probe port                                             
               read port_counter < /tmp/paws/var/port_counter                  
               PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter +1))'}')
		msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply 
       fi
;;
mgmtconfupdate) # mgmt conf update
       dl_file $2 /tmp/paws/local.conf
       read port_counter < /tmp/paws/var/port_counter
       PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter +1))'}')  
       msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply
;;
config) # configure parameters
	case $2 in 
	wifi-enable)
		echo $2 > /tmp/paws/var/wifi_latest
		wifi up >/dev/null 2>&1
		# Select probe port
		read port_counter < /tmp/paws/var/port_counter
		PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter + 1))'}')
		msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply
	;;

 	wifi-disable)
		echo $2 > /tmp/paws/var/wifi_latest
		wifi down >/dev/null 2>&1
		read port_counter < /tmp/paws/var/port_counter
                PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter + 1))'}')                                                               
                msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply 
	;;
	
	remove-throttle)
		/etc/init.d/wshaper stop > /dev/null 2>&1
		uplink=$(cat /etc/config/wshaper | grep uplink | awk '{print $3}')      
		downlink=$(cat /etc/config/wshaper | grep downlink | awk '{print $3}')  
		cat /etc/config/wshaper | sed s/$uplink/\'30000\'/ > file
		cat file | sed s/$downlink/\'10000\'/ > /etc/config/wshaper 
		rm file
		read port_counter < /tmp/paws/var/port_counter                                                                                         
		PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter + 1))'}')             
		msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply  
	;;
	
	throttle-up)
		/etc/init.d/wshaper stop > /dev/null 2>&1 
		uplink=$(cat /etc/config/wshaper | grep downlink | awk '{print $3}')
		cat /etc/config/wshaper | sed s/$uplink/\'$3\'/ > file
                mv file /etc/config/wshaper
                /etc/init.d/wshaper start >/dev/null 2>&1
                read port_counter < /tmp/paws/var/port_counter
		PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter + 1))'}') 
		msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply  
	;;
	
	throttle-dw)
		/etc/init.d/wshaper stop > /dev/null 2>&1
		downlink=$(cat /etc/config/wshaper | grep uplink | awk '{print $3}')
		cat /etc/config/wshaper | sed s/$downlink/\'$3\'/ > file
		mv file /etc/config/wshaper
		/etc/init.d/wshaper start >/dev/null 2>&1             
		read port_counter < /tmp/paws/var/port_counter
		PROBE_PORT=$(echo $PROBE_PORTS | awk '{print $'$((port_counter + 1))'}')
		msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/paws/var/reply   
	;;
	
	esac		
;;	

esac
